// Backbone.AdvancedRouter v0.1.1

!function(a,b){if("function"==typeof define&&define.amd)define(["backbone","underscore","bluebird","backbone.base-router"],function(a,c,d){return b(a,c,d)});else if("undefined"!=typeof exports){var c=require("backbone"),d=require("bluebird"),e=require("underscore");c.BaseRouter=require("backbone.base-router"),module.exports=b(c,e,d)}else b(a.Backbone,a._,a.Promise)}(this,function(a,b){"use strict";var b=require("underscore"),c=require("bluebird");return a.AdvancedRouter=a.BaseRouter.extend({history:[],controllers:{},constructor:function(b){this.controllers=b.controllers||{},a.BaseRouter.prototype.constructor.apply(this,arguments)},onRoute:function(){this.history.push(a.history.fragment)},navigateTo:function(c,d){var e={trigger:!0};d=b.defaults({},d,e),console.log("navigate",c,d),this.navigate(c,d),d.trigger===!1&&this.history.push(a.history.fragment)},onNavigate:function(a){var d=this._parseRoute(a),e=[c.resolve()];this.history.push(a.uriFragment),d.before&&!b.isArray(d.before)?e=[d.before]:d.before&&b.isArray(d.before)&&(e=d.before),c.resolve(e).each(function(a){return a()}).then(b.bind(function(){if(this.trigger("before:route",a),b.isFunction(d.method))d.method.call(d.controller,a.params);else if(b.isObject(d.method)){var e=c.method(d.method.before).bind(d.controller);e(a.params).then(b.bind(function(){return d.method.run.apply(d.controller,arguments),c.resolve()},this),b.bind(function(a){if(!b.isString(a))throw console.log("Error"),a;this.navigateTo(a)},this)).then(b.bind(function(){this.trigger("route",a)},this))}return!1},this),b.bind(function(a){return console.log("not solved",a),!1},this))},_parseRoute:function(a){var d,e=a.linked,f={controller:null,method:null,before:[],after:[]};if(b.isFunction(e))f.method=e;else if(b.isObject(e)){if(d=e.uses,e.before)if(b.isArray(e.before)){var g=[];b.each(e.before,b.bind(function(a){if(!this.filters[a])throw new Error("Filter ["+a+"] does not exist.");g.push(c.method(this.filters[a]))},this)),f.before=g}else if(b.isString(e.before)){if(!this.filters[filter])throw new Error("Filter ["+filter+"] does not exist.");f.before=c.method(this.filters[e.before])}else b.isFunction(e.before)&&(f.before=[c.method(e.before)])}else b.isString(e)&&(d=e);if(!f.method){if(-1===d.indexOf("@"))throw new Error("Router string should be in format: ControllerName@method.");var h=d.split("@");if(f.controller=this.getController(h[0]),!f.controller)throw new Error("Controller ["+h[0]+"] does not exist.");if(f.method=f.controller[h[1]],!f.method)throw new Error("Method ["+h[1]+"] does not exist on "+h[0]+" controller.")}return f},onHistoryBack:function(a){this.history.pop(),this.navigate(b.last(this.history),a)},getController:function(a){return this.controllers[a]}}),a.AdvancedRouter});
//# sourceMappingURL=backbone.advanced-router.min.js.map