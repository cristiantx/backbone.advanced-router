// Backbone.AdvancedRouter v0.1.0

!function(a,b){if("function"==typeof define&&define.amd)define(["backbone","underscore","bluebird","backbone.base-router"],function(a,c,d){return b(a,c,d)});else if("undefined"!=typeof exports){var c=require("backbone"),d=require("bluebird"),e=require("underscore");c.BaseRouter=require("backbone.base-router"),module.exports=b(c,e,d)}else b(a.Backbone,a._,a.Promise)}(this,function(a,b){"use strict";return a.AdvancedRouter=a.BaseRouter.extend({history:[],controllers:{},constructor:function(b){this.controllers=b.controllers||{},a.BaseRouter.prototype.constructor.apply(this,arguments)},onRoute:function(){this.history.push(a.history.fragment)},navigateTo:function(c,d){var e={trigger:!0};d=b.defaults({},d,e),console.log("navigate",c,d),this.navigate(c,d),d.trigger===!1&&this.history.push(a.history.fragment)},onNavigate:function(a){var c=this._parseRoute(a),d=[Promise.resolve()];this.history.push(a.uriFragment),c.before&&!b.isArray(c.before)?d=[c.before]:c.before&&b.isArray(c.before)&&(d=c.before),Promise.resolve(d).each(function(a){return a()}).then(b.bind(function(){if(this.trigger("before:route",a),b.isFunction(c.method))c.method.call(c.controller,a.params);else if(b.isObject(c.method)){var d=Promise.method(c.method.before).bind(c.controller);d(a.params).then(b.bind(function(){return c.method.run.apply(c.controller,arguments),Promise.resolve()},this),b.bind(function(a){if(!b.isString(a))throw console.log("Error"),a;this.navigateTo(a)},this)).then(b.bind(function(){this.trigger("route",a)},this))}return!1},this),b.bind(function(a){return console.log("not solved",a),!1},this))},_parseRoute:function(a){var c,d=a.linked,e={controller:null,method:null,before:[],after:[]};if(b.isFunction(d))e.method=d;else if(b.isObject(d)){if(c=d.uses,d.before)if(b.isArray(d.before)){var f=[];b.each(d.before,b.bind(function(a){if(!this.filters[a])throw new Error("Filter ["+a+"] does not exist.");f.push(Promise.method(this.filters[a]))},this)),e.before=f}else if(b.isString(d.before)){if(!this.filters[filter])throw new Error("Filter ["+filter+"] does not exist.");e.before=Promise.method(this.filters[d.before])}else b.isFunction(d.before)&&(e.before=[Promise.method(d.before)])}else b.isString(d)&&(c=d);if(!e.method){if(-1===c.indexOf("@"))throw new Error("Router string should be in format: ControllerName@method.");var g=c.split("@");if(e.controller=this.getController(g[0]),!e.controller)throw new Error("Controller ["+g[0]+"] does not exist.");if(e.method=e.controller[g[1]],!e.method)throw new Error("Method ["+g[1]+"] does not exist on "+g[0]+" controller.")}return e},onHistoryBack:function(a){this.history.pop(),this.navigate(b.last(this.history),a)},getController:function(a){return this.controllers[a]}}),a.AdvancedRouter});
//# sourceMappingURL=backbone.advanced-router.min.js.map